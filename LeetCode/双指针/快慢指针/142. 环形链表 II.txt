note:
1.快慢指针

code:
class Solution {
public:
	ListNode *detectCycle(ListNode *head) {
		ListNode *slowPtr = head;
		ListNode *fastPtr = head;
		while (fastPtr != nullptr && fastPtr->next != nullptr)
		{
			slowPtr = slowPtr->next;
			fastPtr = fastPtr->next->next;
			if (slowPtr == fastPtr) {
				break;
			}
		}
		// 此时说明无环
		if (fastPtr == nullptr || fastPtr->next == nullptr) {
			return nullptr;
		}
		// 快慢指针相遇时，让其中任一个指针指向头节点，然后让它俩以相同速度前进，再次相遇时所在的节点位置就是环开始的位置
		slowPtr = head;
		while (slowPtr != fastPtr) {
			slowPtr = slowPtr->next;
			fastPtr = fastPtr->next;
		}
		return slowPtr;
	}
};