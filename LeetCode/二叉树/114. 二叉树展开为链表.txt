note:
1.递归

code:
class Solution {
public:
    void flatten(TreeNode* root) {
        if (root == nullptr) {
            return;
        }

        flatten(root->left);
        flatten(root->right);
        /**** 后序遍历位置 ****/
        // 1、左右子树已经被拉平成一条链表
        TreeNode* left = root->left;
        TreeNode* right = root->right;
        // 2、将左子树作为右子树
        root->right = root->left;
        root->left = nullptr;
        // 3、将原先的右子树接到当前右子树的末端
        TreeNode *p = root;
        while (p->right != nullptr) {
            p = p->right;
        }
        p->right = right;

    }
};
