1.理论速率怎么计算
2.射频调优方法
3.netlink、ioctl区别
4.stamgr代码和功能写个框架
5.freenetconf中so动态加载，相比于静态加载的优缺点；优点：根据业务选择性加载，内存节省，库变化本身发热恩耳聪不需要重新编；缺点：？
答：
使用dlopen函数动态加载toolbox.so和在Makefile中直接链接toolbox.so这两种方式各有优缺点：
使用dlopen函数动态加载toolbox.so：
优点：
灵活性更高：可以在运行时根据需要动态加载和卸载动态库，这样可以动态更新库，或者根据条件加载不同的库。
减小可执行文件大小：不需要将动态库的代码和数据直接链接到可执行文件中，可以减小可执行文件的大小。
缺点：
运行时开销较大：动态加载和解析库可能在运行时产生一些额外的开销，包括加载时间、内存开销等。
错误处理复杂：需要处理动态加载库失败的情况，需要小心处理符号解析和库版本问题。
在Makefile中直接链接toolbox.so：
优点：
静态链接速度更快：在编译时直接将动态库链接到可执行文件中，运行时不需要再进行动态库的加载和解析，因此启动速度可能会更快。
更直观：在编译时就能确定可执行文件需要的库，代码更清晰。
缺点：
可执行文件大小增加：将动态库代码和数据直接链接到可执行文件中，可能导致可执行文件的大小增加。
灵活性较低：需要在编译时确定所需的库，运行时无法动态更新或加载不同的库。
根据具体的情况和需求，可以选择适合的方式来使用动态库。如果需要灵活性和动态更新，可以选择使用dlopen动态加载库；如果追求启动速度和更直观的编译连接，可以选择在Makefile中直接链接库。
6.寻找对外可以用的chatgpt资源
