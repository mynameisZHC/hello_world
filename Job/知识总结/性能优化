●动态内存申请
结合业务 说明动态内存申请的原理和流程

●热点函数
结合具体场景分析
(1)减少热点函数的嵌套深度
(2)热点函数中涉及算数运算的 优先用位运算代替乘除法
(3)使用switch case 把最容易出现的条件放在最前面 以减少后面条件的判断
(4)对一些通用、短小函数做内联
优点：当编译器处理调用内联函数的语句时，不会将该语句编译成函数调用的指令，而是直接将整个函数体的代码插人调用语句处，就不需要付出执行函数调用的额外开销
缺点：可能会增加程序的代码量，可执行程序的体积可能也会随之增加；空间换时间
结论：不超过15行、没有复杂操作、通用的函数做内联处理
(5)C++11的右值语义， std::move 减少临时对象的构造
(6)分支预测 likely unlikely
因此，通过对分支条件使用likely和unlikely，我们可给编译器一种暗示，即该分支条件被满足的概率比较大或比较小。而编译器利用这一信息优化其机器指令，从而最大限度减少CPU分支预测失败带来的惩罚
https://zhuanlan.zhihu.com/p/357434227
