<1>服务端最大TCP并发连接数
(1)文件描述符限制：socekt是文件描述符 单个进程最大打开的文件数 ulimit -a
(2)内存限制：每个TCP连接都要占用一定内存，操作系统是有限的

<2>TCP建立连接过程中前两次握手不可用携带数据，第三次握手是可以携带数据的

<3>TCP连接三次握手的原因
(1)三次握手才能保证双方具有发送和接收能力
(2)为什么是三次而不是两次的原因：防止旧的重复连接初始化造成混乱
客户端的第三次握手有足够上下文判断当前连接是否是历史连接：如果是历史连接(序列号过期或超时)，则第三次握手发RST报文，以中止此次历史连接；如果不是历史连接，则正常发送ACK报文，双方成功建立连接
(3)同步双方的初始序列号 序列号能保证数据不重复、不丢失和按需传输
(3)四次握手没有必要

<4>socket对应TCP连接和断开
(1)linux内核会维护两个队列：SYN队列(发送了第二次握手)、ACCEPT队列(收到第三次握手)  SYN队列容量由内核tcp_max_syn_backlog维护 ACCEPT队列由int listen(int socketfd, int backlog)中backlog维护
(2)客户端connect成功返回是第二次握手，服务端accept返回是第三次握手
