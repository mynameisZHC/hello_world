<1>C++ 的动态多态怎么实现的
多态过程：在基类的函数前加上virtual关键字使其变为虚函数，在派生类中去重写该虚函数，则在运行时会根据所指对象的实际类型来调用相应的函数，如果所指对象是基类则调用基类虚函数，如果所指对象为派生类则调用派生类虚函数
多态底层原理：
虚函数表：类中含有虚函数时，编译器会为这个类生成一个虚函数表
虚表指针：在含有虚函数类对象进行实例化时，对象地址的首4个字节会存储指向虚表的指针vptr
原理性过程：
(1)编译器在发现类中含有虚函数时，会自动为这个类生成一份虚表，该表是一个一维数组，里面保存虚函数的入口地址
(2)在构造时，编译器会为含有虚函数的类生成一个4字节保存虚函数表地址的虚表指针，此指针指向这个类的虚表地址
(3)当派生类没有对基类的虚函数重写时，派生类的虚表指针指向的是基类的虚表；当派生类对基类的虚函数重写时，派生类的虚表指针指向的是自身的虚表；当派生类中有自己的虚函数时，在自己的虚表中将此虚函数加在后面。
这样指向派生类的基类指针在运行时，就可以根据派生类对虚函数的重写情况动态进行调用，从而实现多态。

<2>C++ 的构造函数可以是虚函数吗
